package com.flight_app.util;

import java.io.FileOutputStream;
import java.sql.Timestamp;
import java.util.Date;

import org.springframework.stereotype.Component;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

@Component
public class PDFGenerator {
    
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 8,
            Font.BOLD);
    public void generatePDF(String filePath,String name,String emailId,String phone,String flightNumber,String operatingAirlines,String departureCity,String arrivalCity,Timestamp estimatedDepartureTime) {
        try {
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(filePath));
            document.open();
            addMetaData(document);
            addTitleAndTable(document,name,emailId,phone,flightNumber,operatingAirlines,departureCity,arrivalCity,estimatedDepartureTime);
            document.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private static void addMetaData(Document document) {
        document.addTitle("My first PDF");
        document.addSubject("Using iText");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("Lars Vogel");
        document.addCreator("Lars Vogel");
    }

    private static void addTitleAndTable(Document document,String name,String emailId,String phone,String flightNumber,String operatingAirlines,String departureCity,String arrivalCity,Timestamp estimatedDepartureTime)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        // Lets write a big header
        preface.add(new Paragraph("Flight Booking Details", catFont));

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph(
                "Ticket generated at: " + "Flight Reservation counter "+departureCity + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                smallBold));
        preface.add(new Paragraph("This ticket is computer generated and does not require signature. ",smallBold));
        addEmptyLine(preface, 1);
        document.add(preface);
        // Start a new page
        
        String s1=estimatedDepartureTime.toString();
        
        PdfPTable table = new PdfPTable(2);
        PdfPCell c1 = new PdfPCell(new Phrase("Passenger Details"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        c1.setColspan(2);
        table.addCell(c1);
        table.setHeaderRows(1);
        table.addCell("Passenger Name: ");
        table.addCell(name);
        table.addCell("Email: ");
        table.addCell(emailId);
        table.addCell("Phone No.");
        table.addCell(phone);
        document.add(table);
        
        PdfPTable table2 = new PdfPTable(2);
        PdfPCell c2 = new PdfPCell(new Phrase("Flight Details"));
        c2.setHorizontalAlignment(Element.ALIGN_CENTER);
        c2.setColspan(2);
        table2.addCell(c2);
        table2.setHeaderRows(1);
        table2.addCell("Flight ID: ");
        table2.addCell(flightNumber);
        table2.addCell("Operating Airline: ");
        table2.addCell(operatingAirlines);
        table2.addCell("Departure City: ");
        table2.addCell(departureCity);
        table2.addCell("Arrival City: ");
        table2.addCell(arrivalCity);
        table2.addCell("Departure Time: ");
        table2.addCell(s1);
        document.add(table2);
        
        document.close();

    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}